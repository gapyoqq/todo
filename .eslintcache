[{"D:\\2021\\Todos\\src\\index.tsx":"1","D:\\2021\\Todos\\src\\App.tsx":"2","D:\\2021\\Todos\\src\\EditableSpan.tsx":"3","D:\\2021\\Todos\\src\\reportWebVitals.ts":"4","D:\\2021\\Todos\\src\\AddItemForm.tsx":"5","D:\\2021\\Todos\\src\\Todolist.tsx":"6"},{"size":448,"mtime":1609860380051,"results":"7","hashOfConfig":"8"},{"size":5823,"mtime":1613048848768,"results":"9","hashOfConfig":"8"},{"size":913,"mtime":1611655363437,"results":"10","hashOfConfig":"8"},{"size":425,"mtime":1609859526732,"results":"11","hashOfConfig":"8"},{"size":1531,"mtime":1611654853901,"results":"12","hashOfConfig":"8"},{"size":3525,"mtime":1611688822185,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g9ciuu",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\2021\\Todos\\src\\index.tsx",[],"D:\\2021\\Todos\\src\\App.tsx",[],"D:\\2021\\Todos\\src\\EditableSpan.tsx",["28"],"import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype EditableSpanPropsType = {\r\n    title: string\r\n    onChange: (newValue: string) => void\r\n}\r\n\r\nexport function EditableSpan(props: EditableSpanPropsType) {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const activateEditMode = () => {\r\n        setTitle(props.title)\r\n        setEditMode(true)\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false)\r\n        props.onChange(title)\r\n    }\r\n    const onChangeTitleHandler = (e: ChangeEvent<HTMLInputElement>) => setTitle(e.currentTarget.value)\r\n\r\n    return editMode\r\n        ? <TextField\r\n            onChange={onChangeTitleHandler}\r\n            autoFocus value={title} onBlur={activateViewMode}/>\r\n        : <span onDoubleClick={activateEditMode}>{props.title}</span>\r\n}\r\n","D:\\2021\\Todos\\src\\reportWebVitals.ts",[],"D:\\2021\\Todos\\src\\AddItemForm.tsx",[],["29","30"],"D:\\2021\\Todos\\src\\Todolist.tsx",[],{"ruleId":"31","severity":1,"message":"32","line":1,"column":29,"nodeType":"33","messageId":"34","endLine":1,"endColumn":42},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"@typescript-eslint/no-unused-vars","'KeyboardEvent' is defined but never used.","Identifier","unusedVar","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-global-assign","no-unsafe-negation"]